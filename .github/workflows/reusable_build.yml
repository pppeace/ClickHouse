name: Build ClickHouse
'on':
  workflow_call:
    inputs:
      build_name:
        description: the value of build type from tests/ci/ci_config.py
        required: true
        type: string
      checkout_depth:
        description: the value of the git shallow checkout
        required: false
        type: number
        default: 1
      runner_type:
        description: the label of runner to use
        default: builder
        type: string
      additional_envs:
        description: additional ENV variables to setup the job
        type: string

jobs:
  Build:
    name: build-${{inputs.build_name}}
    runs-on: [self-hosted, '${{inputs.runner_type}}']
    steps:
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          TEMP_PATH=${{runner.temp}}/build_check
          IMAGES_PATH=${{runner.temp}}/images_path
          REPO_COPY=${{runner.temp}}/build_check/ClickHouse
          CACHES_PATH=${{runner.temp}}/../ccaches
          BUILD_NAME=binary_release
          EOF
      - name: Download changed images
        uses: actions/download-artifact@v3
        with:
          name: changed_images
          path: ${{ env.IMAGES_PATH }}
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
          submodules: true
          fetch-depth: ${{inputs.checkout_depth}}
          filter: tree:0
      - name: Build
        run: |
          sudo rm -fr "$TEMP_PATH"
          mkdir -p "$TEMP_PATH"
          cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
          cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
      - name: Upload build URLs to artifacts
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_URLS }}
          path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
      - name: Cleanup
        if: always()
        run: |
          docker ps --quiet | xargs --no-run-if-empty docker kill ||:
          docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
          sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
